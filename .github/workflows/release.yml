name: Release
on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Prerelease
        run: npx nx run $PROJECT:version --configuration=prerelease
        if: github.ref == 'refs/heads/test'
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          PROJECT: ${{ inputs.project }}

      - name: Release
        run: npx nx run $PROJECT:version
        if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          PROJECT: ${{ inputs.project }}
